@startuml
abstract class NoteDatabase {
- {static} NoteDatabase instance
+ {static} NoteDatabase getInstance(Context)
+ {abstract}CategoryDao categoryDao()
+ {abstract}NoteDao noteDao()
}


class ShowNoteActivity {
- TextView categoryTextView
- Button okButton
# void onCreate(Bundle)
- void loadNoteFromDatabase(int)
}


class ShowNoteActivity$LoadNoteTask {
# Note doInBackground(Integer)
# void onPostExecute(Note)
}

class NoteAdapter {
- List<Note> notes
+ void setNotes(List<Note>)
+ NoteViewHolder onCreateViewHolder(ViewGroup,int)
+ void onBindViewHolder(NoteViewHolder,int)
- int getCategoryColor(String)
+ int getItemCount()
}


class NoteAdapter$NoteViewHolder {
~ TextView noteTitle
~ ConstraintLayout showNote
+ void onCreateContextMenu(ContextMenu,View,ContextMenu.ContextMenuInfo)
+ boolean onMenuItemClick(MenuItem)
}


class MainActivity {
+ {static} int REQUEST_SHOW_NOTES
- {static} int REQUEST_ADD_NOTE
- RecyclerView noteRecyclerView
- NoteAdapter noteAdapter
- NoteDatabase noteDatabase
- List<Note> notesList
# void onCreate(Bundle)
# void onResume()
- void searchNotes(String)
- void loadNotes(int)
# void onActivityResult(int,int,Intent)
}


class LoadNotesTask {
# List<Note> doInBackground(Void)
# void onPostExecute(List<Note>)
}

interface NoteDao {
~ void insert(Note)
~ void update(Note)
~ void delete(Note)
~ List<Note> getAllNotes()
~ void deleteAll()
~ List<Note> searchNotes(String)
~ void updateNoteContentAndCategoryAndLastUpdated(int,String,String,String,String)
~ List<NoteandCategory> getNoteAndCategory()
~ List<Note> getNotesByCategory(String)
~ Note getNoteById(int)
~ void deleteNoteById(int)
}

class Note {
+ int id
+ String category
+ String title
+ String noteText
+ Calendar dateCreated
+ Calendar dateLastUpdated
+ int getId()
+ void setId(int)
+ String getCategory()
+ void setCategory(String)
+ String getTitle()
+ String getNoteText()
+ Calendar getDateCreated()
+ Calendar getDateLastUpdated()
}


interface CategoryDao {
~ void insert(Category)
~ void update(Category)
~ void delete(Category)
~ List<Category> getAllCategories()
}

class AddNoteActivity {
- Spinner categorySpinner
- EditText titleEditText
# void onCreate(Bundle)
- void saveNoteToDatabase()
}


class SaveNoteTask {
# Void doInBackground(Void)
# void onPostExecute(Void)
}

class NoteandCategory {
+ Note note
+ List<Note> notes
}

class EditNoteActivity {
- EditText titleEditText
- Spinner categorySpinner
- Button cancelButton
- int noteId
# void onCreate(Bundle)
- void loadNoteContent()
- int getIndexForCategory(String)
- void saveNoteAndFinish()
}


class EditNoteActivity$LoadNoteContentTask {
# Note doInBackground(Void)
# void onPostExecute(Note)
}

class EditNoteActivity$UpdateNoteContentTask {
# Void doInBackground(String)
# void onPostExecute(Void)
}

class Converters {
+ {static} Calendar fromTimestamp(Long)
+ {static} Long calendarToTimestamp(Calendar)
}

class Category {
+ String category
}

class DeleteNoteActivity {
- boolean confirmDelete
# void onCreate(Bundle)
- void deleteNote()
}


class DeleteNoteActivity$DeleteNoteTask {
# Void doInBackground(Integer)
# void onPostExecute(Void)
}



RoomDatabase <|-- NoteDatabase
AppCompatActivity <|-- ShowNoteActivity
ShowNoteActivity +.. ShowNoteActivity$LoadNoteTask
AsyncTask <|-- ShowNoteActivity$LoadNoteTask
Adapter <|-- NoteAdapter
NoteAdapter +.. NoteAdapter$NoteViewHolder
OnCreateContextMenuListener <|.. NoteAdapter$NoteViewHolder
OnMenuItemClickListener <|.. NoteAdapter$NoteViewHolder
ViewHolder <|-- NoteAdapter$NoteViewHolder
AppCompatActivity <|-- MainActivity
AsyncTask <|-- LoadNotesTask
AppCompatActivity <|-- AddNoteActivity
AsyncTask <|-- SaveNoteTask
AppCompatActivity <|-- EditNoteActivity
EditNoteActivity +.. EditNoteActivity$LoadNoteContentTask
AsyncTask <|-- EditNoteActivity$LoadNoteContentTask
EditNoteActivity +.. EditNoteActivity$UpdateNoteContentTask
AsyncTask <|-- EditNoteActivity$UpdateNoteContentTask
AppCompatActivity <|-- DeleteNoteActivity
DeleteNoteActivity +.. DeleteNoteActivity$DeleteNoteTask
AsyncTask <|-- DeleteNoteActivity$DeleteNoteTask
@enduml